{"version":3,"sources":["Score.component.js","PlayQuiz.js","pages/homepage.js","BruceWayne.Component.js","MakeQuiz.component.js","LineGraph.js","tabDiv.component.js","tabs.manager.component.js","App.js","index.js"],"names":["Score","score","resetButton","className","to","PlayQuiz","Component","constructor","super","abortController","AbortController","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleClick","e","this","setState","prevState","prevProp","counter","console","log","state","updatesQuestionAndAnswers","userOption2","currentTarget","value","checkUserAnswer","showScore","userOption","informationAboutQestionAndAnswer","correct_answer","currentQuestion","question","currentAnswers","incorrect_answers","handlePreviousButton","handleResetButton","showLoading","componentDidMount","fetch","signal","then","res","json","obj","results","componentWillUnmount","abort","render","map","currentAnswer","key","onClick","HomePage","props","history","push","BruceWayne","MakeQuiz","initialValues","questions","onSubmit","data","handleSubmit","values","name","remove","form","questionIndex","htmlFor","id","placeholder","type","BarGraph","class","labels","datasets","label","borderColor","backgroundColor","width","height","options","title","display","text","scales","yAxes","ticks","min","max","stepSize","TabDiv","activeTab","LineGraph","TabManager","useState","setActiveTab","App","exact","path","component","TabsManager","Homepage","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.98ef6750.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Score = ({ score, resetButton }) => {\r\n  return (\r\n    <div className=\"report-card\">\r\n      <h1>Score</h1>\r\n      <h1>Score: {score}/ 10</h1>\r\n      <Link to=\"/make-quiz\">\r\n        <h1>Make Quiz</h1>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import React, { Component } from \"react\";\r\nimport Score from \"./Score.component\";\r\nclass PlayQuiz extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      informationAboutQestionAndAnswer: [],\r\n      currentQuestion: [],\r\n      currentAnswers: [],\r\n      counter: 0,\r\n      score: 0,\r\n      showLoading: false,\r\n      showScore: false\r\n    };\r\n  }\r\n\r\n  // component did mount\r\n\r\n  componentDidMount() {\r\n    this.setState({ showLoading: true });\r\n    fetch(\"https://opentdb.com/api.php?amount=10\", {\r\n      signal: this.abortController.signal\r\n    })\r\n      .then((res) => res.json())\r\n      .then((obj) => {\r\n        this.setState({ showLoading: false });\r\n        this.setState({ informationAboutQestionAndAnswer: obj.results }, () =>\r\n          console.log(\r\n            \"this.state.informationAboutQuestionAndAnswer\",\r\n            this.state.informationAboutQestionAndAnswer\r\n          )\r\n        );\r\n        this.setState(\r\n          { currentQuestion: obj.results[this.state.counter].question },\r\n          () => console.log(\"Current Question\", this.state.currentQuestion)\r\n        );\r\n        this.setState(\r\n          (prevState, prevProp) => {\r\n            return {\r\n              currentAnswers: this.shuffle([\r\n                obj.results[this.state.counter].correct_answer,\r\n                ...obj.results[this.state.counter].incorrect_answers\r\n              ])\r\n            };\r\n          },\r\n          () => {\r\n            console.log(\r\n              \"Current Answers to this question are: \",\r\n              this.state.currentAnswers\r\n            );\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  // component will un mount\r\n\r\n  componentWillUnmount() {\r\n    this.abortController.abort();\r\n  }\r\n\r\n  // Code to import abortController that unsubscribes the API when the component unmounts\r\n\r\n  abortController = new AbortController();\r\n\r\n  // All the functions now go down here\r\n\r\n  // Function that takes in an array and returns a shuffled array.\r\n\r\n  shuffle = (array) => {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  };\r\n\r\n  //handleClick function\r\n\r\n  handleClick = (e) => {\r\n    this.setState(\r\n      (prevState, prevProp) => {\r\n        return {\r\n          counter: prevState.counter + 1\r\n        };\r\n      },\r\n      () => console.log(\"The value of counter is \", this.state.counter)\r\n    );\r\n    if (this.state.counter < 9) {\r\n      this.updatesQuestionAndAnswers();\r\n      const userOption2 = e.currentTarget.value;\r\n      this.checkUserAnswer(userOption2);\r\n    } else if (this.state.counter === 9) {\r\n      const userOption2 = e.currentTarget.value;\r\n      this.checkUserAnswer(userOption2);\r\n      this.setState({ showScore: true });\r\n    }\r\n    //   else {\r\n    //   this.setState({ showScore: true });\r\n    // }\r\n  };\r\n\r\n  // Check user answer\r\n\r\n  checkUserAnswer = (userOption) => {\r\n    console.log(\"In check your answer \", this.state.counter);\r\n    const real_answer = this.state.informationAboutQestionAndAnswer[\r\n      this.state.counter\r\n    ]?.correct_answer;\r\n    if (userOption === real_answer) {\r\n      this.setState((prevState, prevProp) => {\r\n        return { score: prevState.score + 1 };\r\n      });\r\n    }\r\n  };\r\n\r\n  // Updates the question and answers state:\r\n\r\n  updatesQuestionAndAnswers = () => {\r\n    this.setState(\r\n      (prevState, prevProp) => {\r\n        return {\r\n          currentQuestion:\r\n            prevState.informationAboutQestionAndAnswer[prevState.counter]\r\n              .question,\r\n          currentAnswers: this.shuffle([\r\n            prevState.informationAboutQestionAndAnswer[prevState.counter]\r\n              .correct_answer,\r\n            ...prevState.informationAboutQestionAndAnswer[prevState.counter]\r\n              .incorrect_answers\r\n          ])\r\n        };\r\n      },\r\n      () => {\r\n        console.log(\r\n          \"The button has been clicked its time to update the questions and answers\"\r\n        );\r\n        console.log(\"New Current Question: \", this.state.currentQuestion);\r\n        console.log(\"New Current Answers, \", this.state.currentAnswers);\r\n        console.log(\r\n          \"The correct answer to this question is: \",\r\n          this.state.informationAboutQestionAndAnswer[this.state.counter]\r\n            .correct_answer\r\n        );\r\n        console.log(\r\n          \"-----------------------------------------------------------\"\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  // function to handle the previous button:\r\n\r\n  handlePreviousButton = () => {\r\n    // Setting the counter to counter - 1:\r\n\r\n    if (this.state.counter !== 0) {\r\n      this.setState(\r\n        (prevState, prevProp) => {\r\n          return { counter: prevState.counter - 1 };\r\n        },\r\n        () =>\r\n          console.log(\r\n            \"The user has clicked the previous button... Now the value of counter is: \",\r\n            this.state.counter\r\n          )\r\n      );\r\n    }\r\n\r\n    // Adding restrictions for score's value and then setting my score state to -1.\r\n\r\n    if (this.state.score > 0) {\r\n      this.setState((prevState, prevProp) => {\r\n        return { score: prevState.score - 1 };\r\n      });\r\n    }\r\n\r\n    // Adding restrictions for counter's value and then setting the currentQuestion and currentAnswers:\r\n\r\n    if (this.state.counter < 9) {\r\n      this.updatesQuestionAndAnswers();\r\n    } else {\r\n      this.setState({ showScore: true });\r\n    }\r\n  };\r\n\r\n  // Handling the reset button;\r\n\r\n  handleResetButton = () => {\r\n    // first setting the counter back to 0 and score also back to 0.\r\n    this.setState((prevState, prevProp) => {\r\n      return { counter: 0, score: 0 };\r\n    });\r\n    if (this.state.counter < 9) {\r\n      this.updatesQuestionAndAnswers();\r\n    } else {\r\n      this.setState({ showScore: true });\r\n    }\r\n  };\r\n\r\n  // handling last questions button click:\r\n\r\n  // rendering the html markup\r\n\r\n  render() {\r\n    if (!this.state.showLoading && !this.state.showScore) {\r\n      return (\r\n        <>\r\n          <h1>\r\n            Question {this.state.counter < 10 ? this.state.counter + 1 : 10} of{\" \"}\r\n            {this.state.informationAboutQestionAndAnswer.length}\r\n          </h1>\r\n          <h1>{this.state.currentQuestion}</h1>\r\n          {this.state.currentAnswers?.map((currentAnswer) => (\r\n            <button\r\n              key={currentAnswer}\r\n              value={currentAnswer}\r\n              onClick={this.handleClick}\r\n            >\r\n              {currentAnswer}\r\n            </button>\r\n          ))}\r\n\r\n          <h1>{`The score of the user is ${this.state.score}`}</h1>\r\n          <button onClick={this.handlePreviousButton}>Previous</button>\r\n          <button onClick={this.handleResetButton}>Reset the quiz</button>\r\n        </>\r\n      );\r\n    } else if (this.state.showScore) {\r\n      return <Score score={this.state.score} />;\r\n    } else {\r\n      return <h1>Loading....</h1>;\r\n    }\r\n  }\r\n}\r\nexport default PlayQuiz;\r\n","import React from \"react\";\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <h1>Welcome to the quiz department</h1>\r\n      <button onClick={() => props.history.push(\"./play-quiz\")}>\r\n        Play Quiz\r\n      </button>\r\n      <button onClick={() => props.history.push(\"/make-quiz\")}>\r\n        Make Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst BruceWayne = () => {\r\n  return <h1>I am Bruce Wayne :)</h1>;\r\n};\r\nexport default BruceWayne;\r\n","import React from \"react\";\r\nimport { Formik, FieldArray, Field } from \"formik\";\r\n\r\nconst MakeQuiz = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        questions: [\"\"]\r\n      }}\r\n      onSubmit={(data) => console.log(data)}\r\n    >\r\n      {({ handleSubmit, values }) => {\r\n        return (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"container-with-button\">\r\n              <FieldArray name=\"questions\">\r\n                {({\r\n                  push,\r\n                  remove,\r\n                  form: {\r\n                    values: { questions }\r\n                  }\r\n                }) => {\r\n                  return questions.map((question, questionIndex) => (\r\n                    <div\r\n                      className=\"question-answer-container\"\r\n                      key={questionIndex}\r\n                    >\r\n                      <div className=\"individual-question\" key={questionIndex}>\r\n                        <label htmlFor={`question-${questionIndex}`}>\r\n                          Question number {questionIndex + 1}\r\n                        </label>\r\n                        <Field\r\n                          id=\"question\"\r\n                          name={`question-${questionIndex}`}\r\n                          placeholder=\"Enter your question\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"answers-container\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={`radio-button-to-the-question-${questionIndex}`}\r\n                        />\r\n                        <Field\r\n                          name={`individual-answer-1-to-the-question-${questionIndex}`}\r\n                          placeholder=\"Enter your answer here\"\r\n                          className=\"answers\"\r\n                        />\r\n                        <br />\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={`radio-button-to-the-question-${questionIndex}`}\r\n                        />\r\n                        <Field\r\n                          name={`individual-answer-2-to-the-question-${questionIndex}`}\r\n                          placeholder=\"Enter your answer here\"\r\n                          className=\"answers\"\r\n                        />\r\n                        <br />\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={`radio-button-to-the-question-${questionIndex}`}\r\n                        />\r\n                        <Field\r\n                          name={`individual-answer-3-to-the-question-${questionIndex}`}\r\n                          placeholder=\"Enter your answer here\"\r\n                          className=\"answers\"\r\n                        />\r\n                        <br />\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={`radio-button-to-the-question-${questionIndex}`}\r\n                        />\r\n                        <Field\r\n                          name={`individual-answer-4-to-the-question-${questionIndex}`}\r\n                          placeholder=\"Enter your answer here\"\r\n                          className=\"answers\"\r\n                        />\r\n                      </div>\r\n                      <button\r\n                        onClick={() => questions.push(\"\")}\r\n                        className=\"buttons\"\r\n                      >\r\n                        Add Question\r\n                      </button>\r\n\r\n                      {questionIndex > 0 && (\r\n                        <button\r\n                          onClick={() => remove(questionIndex)}\r\n                          className=\"buttons\"\r\n                        >\r\n                          Remove Question\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  ));\r\n                }}\r\n              </FieldArray>\r\n              <button type=\"submit\" id=\"submit-button\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default MakeQuiz;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nconst BarGraph = () => {\r\n  const data = {\r\n    labels: [\r\n      \"Aarush\",\r\n      \"Aakarsh\",\r\n      \"Chirag\",\r\n      \"Aditya Bhatt\",\r\n      \"Aanshik\",\r\n      \"Shreshth Chandra\"\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Results of students out of 10\",\r\n        data: [5, 5, 9, 4, 5, 6],\r\n        borderColor: [\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\"\r\n        ],\r\n        backgroundColor: [\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\"\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: \"Results\"\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            min: 0,\r\n            max: 11,\r\n            stepSize: 1\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n  return (\r\n    <Bar\r\n      class=\"bar-graph\"\r\n      data={data}\r\n      width={80}\r\n      height={30}\r\n      options={options}\r\n    />\r\n  );\r\n};\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport BruceWayne from \"./BruceWayne.Component\";\r\nimport MakeQuiz from \"./MakeQuiz.component\";\r\nimport LineGraph from \"./LineGraph\";\r\nconst TabDiv = ({ activeTab }) => {\r\n  return (\r\n    <>\r\n      {activeTab === \"tab1\" && (\r\n        <div>\r\n          <MakeQuiz />\r\n        </div>\r\n      )}\r\n      {activeTab === \"tab2\" && (\r\n        <div>\r\n          <LineGraph />\r\n        </div>\r\n      )}\r\n      {activeTab === \"tab3\" && (\r\n        <div>\r\n          <BruceWayne />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TabDiv;\r\n","import React, { useState } from \"react\";\r\nimport TabDiv from \"./tabDiv.component\";\r\nconst TabManager = () => {\r\n  const [activeTab, setActiveTab] = useState(\"tab1\");\r\n  return (\r\n    <>\r\n      <div className=\"tabs-container\">\r\n        <button\r\n          className=\"individual-tabs\"\r\n          onClick={() => setActiveTab(\"tab1\")}\r\n        >\r\n          Make Quiz\r\n        </button>\r\n        <button\r\n          className=\"individual-tabs\"\r\n          onClick={() => setActiveTab(\"tab2\")}\r\n        >\r\n          Results\r\n        </button>\r\n        <button\r\n          className=\"individual-tabs\"\r\n          onClick={() => setActiveTab(\"tab3\")}\r\n        >\r\n          Bruce Wayne\r\n        </button>\r\n      </div>\r\n      <TabDiv activeTab={activeTab} />\r\n    </>\r\n  );\r\n};\r\nexport default TabManager;\r\n","import React from \"react\";\r\nimport PlayQuiz from \"./PlayQuiz\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Score from \"./Score.component\";\r\nimport Homepage from \"./pages/homepage\";\r\nimport TabsManager from \"./tabs.manager.component\";\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Route exact path=\"/play-quiz\" component={PlayQuiz} />\r\n      <Route exact path=\"/score\" component={Score} />\r\n      <Route exact path=\"/make-quiz\" component={TabsManager} />\r\n      <Route exact path=\"/\" component={Homepage} />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}